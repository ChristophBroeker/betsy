@startuml


interface EngineService {
    getSupportedEngines() : List<EngineId>
    getSupportedLanguage(engine : EngineId) : ProcessLanguage
    install(engine : EngineId)
    uninstall(engine : EngineId)
    start(engine : EngineId)
    stop(engine : EngineId)
    getState(engine : EngineId) : EngineState
    getLogs(engine : EngineId) : LogPackage
}

interface ProcessModelService {
    makeDeployable(engine : EngineId, processModelPackage : ProcessModelPackage) : DeploymentPackage
    deploy(engine : EngineId, deploymentPackage : DeploymentPackage) : ProcessModelId
    undeploy(processModel : ProcessModelId)
    getState(processModel : ProcessModelId) : ProcessModelState
    getDeployedProcessModels() : List<ProcessModelId>
}

interface InstanceService {
    start(model : ProcessModelId, variables : List<Variable>) : Instanced
    getState(instance : InstanceId) : InstanceState
    getStateDetailed(instance : InstanceId) : InstanceStateDetailed
}

EngineService -[hidden]down- ProcessModelService
ProcessModelService -[hidden]down- InstanceService




hide empty members
hide empty methods
hide circle

skinparam monochrome true
skinparam shadowing false
skinparam packageStyle rect
@enduml
